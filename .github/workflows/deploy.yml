name: MLOPS-DEPLOY
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t mlops-deploy:latest .

      - name: Tag Docker image
        run: docker tag mlops-deploy:latest julienschaffauser/mlops-deploy:latest

      - name: Login to Docker Hub with token
        run: docker login -u julienschaffauser -p ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push to Docker Hub
        run: docker push julienschaffauser/mlops-deploy:latest

      - name: Connect to SSH
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -o StrictHostKeyChecking=no << 'EOF'
            if [ ! -d "/home/ubuntu/julienschaffauser" ]; then
              mkdir /home/ubuntu/julienschaffauser
            fi
            cd /home/ubuntu/julienschaffauser
            docker pull julienschaffauser/mlops-deploy:latest
            # stop the container if it exists
            docker stop julienschaffauser/mlops-deploy:latest || true
            docker run -d -p 8025:8025 --name ${{ secrets.DOCKER_CONTAINER_NAME }} julienschaffauser/mlops-deploy:latest
          EOF

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Test the deployment
        run: |
          curl -X POST http://${{ secrets.SSH_HOST }}:8025/predict -H "Content-Type: application/json" -d '{"size": 120, "nb_rooms":3, "garden": 1}'